<section id="content" role="main" class="ac-content">
  <div class="search-form aui">
    <input class="text search-field" type="text" id="search-query" name="search-query"
           placeholder="Rechercher dans l'historique">
  </div>

  <ul class="search-results"></ul>
</section>

<script id="results-template" type="text/x-handlebars-template">
  \{{#each results}}
  <li class="search-result">
    <div class="search-result-details">
      <span class="search-result-author">\{{{this.author}}}</span>
      <span class="search-result-date"> - \{{this.date}}</span>
      <button title="" class="search-result-actions aui-button aui-button-light aui-dropdown2-trigger aui-dropdown2-trigger-arrowless" data-id="\{{this.id}}">
        <span class="aui-icon aui-icon-small aui-iconfont-more">Message actions</span>
      </button>
    </div>
    <div class="search-result-message">\{{{this.message}}}</div>
  </li>
  \{{/each}}
</script>

<script id="no-results-template" type="text/x-handlebars-template">
  <li class="search-result">Il n'y aucun message qui correspond à votre recherche.</li>
</script>

<script id="search-result-actions-dropdown-template" type="text/x-handlebars-template">
  <div id="search-result-actions-dropdown" class="aui-dropdown2-in-header aui-dropdown2 aui-style-default aui-dropdown2-in-buttons" style="right: \{{right}}px; top: \{{top}}px; min-width: 160px; display: block;">
    <div role="application" class="groupchat-room-dropdown">
      <div role="presentation" class="aui-dropdown2-section">
        <div role="group">
          <ul role="list">
            <li class="message-full-dialog">
              <a title="Dialogue" class="" href="{{endpoint}}/sidebar-dialog?id=\{{id}}">Voir le dialogue complet</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</script>

<script type="text/javascript">
  $(document).ready(function () {
    var searchResultsTemplate = Handlebars.compile($('#results-template').html().trim());
    var noResultsTemplate = Handlebars.compile($('#no-results-template').html().trim());
    var searchResultActionsDropdown = Handlebars.compile($('#search-result-actions-dropdown-template').html().trim());

    var searchQueryInput = $("input#search-query");
    var searchResults = $(".search-results");

    var body = $('body');
    var dropdownMenuDisplayed = false;

    function displayResults(results) {
      if (results.length === 0) {
        searchResults.html(noResultsTemplate());
        return;
      }
      searchResults.html(searchResultsTemplate({ results: results }));
      searchResults.focus();

      $('.search-result-actions').click(function (event) {
        event.stopImmediatePropagation();
        if (dropdownMenuDisplayed === true) {
          removeDropdownMenu();
          return;
        }

        displayDropdownMenu(event);
      });
    }

    searchQueryInput.keypress(function (event) {
      if (event.which !== 13) {
        return;
      }
      event.preventDefault();

      var searchQuery = searchQueryInput.val().trim();
      if (searchQuery.length === 0) {
        return;
      }

      if (typeof HipChat === 'undefined') {
        // simulate
        displayResults([
          { id: 1, author: highlightSearchTerms(searchQuery, "Olivier Servieres"), room: "Dev", message: "MERDEUH", date: "20 Dec, 14:53" },
          { id: 2, author: highlightSearchTerms(searchQuery, "Guillaume Charmetant"), room: "Dev", message: highlightSearchTerms(searchQuery, "C'est pas le champ à utiliser mais bon… Champ ion"), date: "20 Dec, 15:12" },
          { id: 3, author: highlightSearchTerms(searchQuery, "Guillaume Charmetant"), room: "Dev", message: highlightSearchTerms(searchQuery, "Ça vaut le coup de regarder si c'est pas ce qu'ils ont fait, non ?"), date: "19 Dec, 09:03" },
          { id: 4, author: highlightSearchTerms(searchQuery, "Olivier Servieres"), room: "Dev", message: highlightSearchTerms(searchQuery, "je déploie tearex"), date: "19 Dec, 14:53" }
        ]);
        return;
      }
      HipChat.auth.withToken(function (err, token) {
        $.ajax({
          type: "POST",
          url: "{{endpoint}}/history/search",
          headers: { 'authorization': 'JWT ' + token },
          data: { query: searchQuery },
          dataType: 'json',
          error: function (jqXHR, status) {
            console.error('fail', status);
          },
          success: function (data) {
            displayResults(data.map(function (result) {
              var message = result['_source'];
              message.id = result['_id'];
              message.author = highlightSearchTerms(searchQuery, message.author);
              message.message = highlightSearchTerms(searchQuery, message.message);
              return message;
            }));
          }
        });
      });
    });

    function highlightSearchTerms(query, message) {
      var enhancedMessage = message;
      var searchTerms = query.split(' ');
      searchTerms.forEach(function (term) {
        var re = new RegExp(term, "ig");
        var termResults = re.exec(enhancedMessage);
        if (termResults && termResults.length > 0) {
          enhancedMessage = enhancedMessage.replace(re, '<mark>' + termResults.pop() + '</mark>');
        }
      });
      return enhancedMessage;
    }

    function removeDropdownMenu() {
      $('#search-result-actions-dropdown').remove();
      dropdownMenuDisplayed = false;
    }

    function displayDropdownMenu(event) {
      body.append(searchResultActionsDropdown({
        id: $(event.currentTarget).data('id'),
        right: body.width() - event.currentTarget.offsetLeft - event.currentTarget.clientWidth - 4,
        top: event.currentTarget.offsetTop + 26
      }));
      dropdownMenuDisplayed = true;
    }

    body.click(removeDropdownMenu);
  });
</script>
